currentBuild.displayName = 'deploy_k8s-#'+currentBuild.number
pipeline{
    agent any
    environment {
      DOCKER_TAG = getVersion()
    }

    stages{
        stage('SCM'){
            steps{
                git credentialsId: 'GitLab', 
                    url: 'https://gitlab.com/aguinaldoa80/demo-jenkins'    
           }
        }
        
        stage('Maven Build'){
            steps{
                sh 'mvn clean package'
           }
        } 
        
        stage('Docker Build'){
            steps{
                sh 'docker build . -t jintsuy/demo-jenkins:${DOCKER_TAG}'
           }
        }
        
        stage('DockerHub Push'){
            steps{
                withCredentials([string(credentialsId: 'docker-hub', variable: 'dockerHubPwd')]) {
                    sh 'docker login -u jintsuy -p ${dockerHubPwd}'
                }
                sh 'docker push jintsuy/demo-jenkins:${DOCKER_TAG}'
           }
        }
        
        stage('Deploy k8s'){
            steps{
                sh 'chmod +x /var/lib/jenkins/workspace/deploy-k8s/changeTag.sh'
                sh '/var/lib/jenkins/workspace/deploy-k8s/./changeTag.sh ${DOCKER_TAG}'
                sshagent(['ssh-kops']) {
                    sh 'scp -o StrictHostKeyChecking=no /var/lib/jenkins/workspace/deploy-k8s/services.yml \
                    /var/lib/jenkins/workspace/deploy-k8s/node-app-pod.yml \
                    aguinaldoa80@34.125.168.18:/home/aguinaldoa80/'
                    script{
                        try{
                            sh 'ssh aguinaldoa80@34.125.168.18 kubectl apply -f .'
                        }catch(error){
                            sh 'ssh aguinaldoa80@34.125.168.18 kubectl create -f .'
                        }
                    }
                }
            }
        }
    }
}

def getVersion(){
    def commitHash = sh label: '', returnStdout: true, script: 'git rev-parse --short HEAD'
    return commitHash
}